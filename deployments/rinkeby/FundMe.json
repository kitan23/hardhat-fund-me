{
  "address": "0x43b6efdB78A4f9Dc6049f6f74316C2BB50b75660",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotEnoughFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3222b98fcefea855ffea1cedfe8e17b6c688e37b21ea659ffe6f8fcd46fa9321",
  "receipt": {
    "to": null,
    "from": "0xB3CA90e6b840fD90536A5fF1b010370Eb1CaE863",
    "contractAddress": "0x43b6efdB78A4f9Dc6049f6f74316C2BB50b75660",
    "transactionIndex": 8,
    "gasUsed": "1089208",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x55d33c97fef303ffc691af1a7f954d6f47a5079cfe9ba06dbc392f2b2eecfc72",
    "transactionHash": "0x3222b98fcefea855ffea1cedfe8e17b6c688e37b21ea659ffe6f8fcd46fa9321",
    "logs": [],
    "blockNumber": 11026519,
    "cumulativeGasUsed": "3313768",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "41b76174bb403d7e84c5db01a098d10d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotEnoughFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\nerror FundMe__NotEnoughFunds();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] private s_funders;\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface public s_priceFeed; \\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed= AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() payable notEnoughFunds public {\\n        // require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders; \\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0); \\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Call failed\\\");\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    modifier notEnoughFunds { \\n        if (msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD) revert FundMe__NotEnoughFunds();\\n        _;\\n    }\\n    \\n    function getOwner() public view returns (address){\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address){\\n        require(index < s_funders.length);\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns (uint256){\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface){\\n        return s_priceFeed;\\n    }\\n\\n}\\n\\n\\n\\n\",\"keccak256\":\"0x0ee3ee7498bfdaa96ed7b9abd7e32d8a9e1554ac934a0669f352b968cc2e9f70\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb08cacff685ac548200bfc09092c746b3ed461289fdda7f570ec61a02f35dc87\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620013583803806200135883398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b6111ec806200016c6000396000f3fe6080604052600436106100955760003560e01c80636b69a592116100595780636b69a5921461019a578063893d20e8146101c55780639e87a5cd146101f0578063b60d42881461021b578063be2693f014610225576100a4565b80630343fb25146100ae5780630ec3b027146100eb5780631bf6132d146101165780633a7b6c74146101535780633ccfd60b14610190576100a4565b366100a4576100a261022f565b005b6100ac61022f565b005b3480156100ba57600080fd5b506100d560048036038101906100d09190610b90565b610360565b6040516100e29190610bd6565b60405180910390f35b3480156100f757600080fd5b506101006103a8565b60405161010d9190610c50565b60405180910390f35b34801561012257600080fd5b5061013d60048036038101906101389190610b90565b6103ce565b60405161014a9190610bd6565b60405180910390f35b34801561015f57600080fd5b5061017a60048036038101906101759190610c97565b6103e6565b6040516101879190610cd3565b60405180910390f35b61019861043f565b005b3480156101a657600080fd5b506101af610681565b6040516101bc9190610bd6565b60405180910390f35b3480156101d157600080fd5b506101da61068e565b6040516101e79190610cd3565b60405180910390f35b3480156101fc57600080fd5b506102056106b8565b6040516102129190610c50565b60405180910390f35b61022361022f565b005b61022d6106e2565b005b6802b5e3af16b188000061026e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109aa90919063ffffffff16565b10156102a6576040517f964742c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f49190610d1d565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600060018054905082106103f957600080fd5b6001828154811061040d5761040c610d73565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610571576000600182815481106104ec576104eb610d73565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061056990610da2565b9150506104c9565b50600067ffffffffffffffff81111561058d5761058c610deb565b5b6040519080825280602002602001820160405280156105bb5781602001602082028036833780820191505090505b50600190805190602001906105d1929190610a86565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105f890610e4b565b60006040518083038185875af1925050503d8060008114610635576040519150601f19603f3d011682016040523d82523d6000602084013e61063a565b606091505b505090508061067e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067590610ebd565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610769576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107ed57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107a3575b5050505050905060005b815181101561087757600082828151811061081557610814610d73565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061086f90610da2565b9150506107f7565b50600067ffffffffffffffff81111561089357610892610deb565b5b6040519080825280602002602001820160405280156108c15781602001602082028036833780820191505090505b50600190805190602001906108d7929190610a86565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161092090610e4b565b60006040518083038185875af1925050503d806000811461095d576040519150601f19603f3d011682016040523d82523d6000602084013e610962565b606091505b50509050806109a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099d90610ebd565b60405180910390fd5b5050565b6000806109b6836109e6565b90506000670de0b6b3a764000085836109cf9190610edd565b6109d99190610f66565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a2f57600080fd5b505afa158015610a43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a679190611024565b5050509150506402540be40081610a7e919061109f565b915050919050565b828054828255906000526020600020908101928215610aff579160200282015b82811115610afe5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610aa6565b5b509050610b0c9190610b10565b5090565b5b80821115610b29576000816000905550600101610b11565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5d82610b32565b9050919050565b610b6d81610b52565b8114610b7857600080fd5b50565b600081359050610b8a81610b64565b92915050565b600060208284031215610ba657610ba5610b2d565b5b6000610bb484828501610b7b565b91505092915050565b6000819050919050565b610bd081610bbd565b82525050565b6000602082019050610beb6000830184610bc7565b92915050565b6000819050919050565b6000610c16610c11610c0c84610b32565b610bf1565b610b32565b9050919050565b6000610c2882610bfb565b9050919050565b6000610c3a82610c1d565b9050919050565b610c4a81610c2f565b82525050565b6000602082019050610c656000830184610c41565b92915050565b610c7481610bbd565b8114610c7f57600080fd5b50565b600081359050610c9181610c6b565b92915050565b600060208284031215610cad57610cac610b2d565b5b6000610cbb84828501610c82565b91505092915050565b610ccd81610b52565b82525050565b6000602082019050610ce86000830184610cc4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d2882610bbd565b9150610d3383610bbd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d6857610d67610cee565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610dad82610bbd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610de057610ddf610cee565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e35600083610e1a565b9150610e4082610e25565b600082019050919050565b6000610e5682610e28565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ea7600b83610e60565b9150610eb282610e71565b602082019050919050565b60006020820190508181036000830152610ed681610e9a565b9050919050565b6000610ee882610bbd565b9150610ef383610bbd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f2c57610f2b610cee565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f7182610bbd565b9150610f7c83610bbd565b925082610f8c57610f8b610f37565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fb681610f97565b8114610fc157600080fd5b50565b600081519050610fd381610fad565b92915050565b6000819050919050565b610fec81610fd9565b8114610ff757600080fd5b50565b60008151905061100981610fe3565b92915050565b60008151905061101e81610c6b565b92915050565b600080600080600060a086880312156110405761103f610b2d565b5b600061104e88828901610fc4565b955050602061105f88828901610ffa565b94505060406110708882890161100f565b93505060606110818882890161100f565b925050608061109288828901610fc4565b9150509295509295909350565b60006110aa82610fd9565b91506110b583610fd9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110f4576110f3610cee565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561113157611130610cee565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561116e5761116d610cee565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111ab576111aa610cee565b5b82820290509291505056fea2646970667358221220f46ae91455b83957d1b4021c833957ec6ecb6edfa233b6ea0b8eabf1fbb0d8a264736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c80636b69a592116100595780636b69a5921461019a578063893d20e8146101c55780639e87a5cd146101f0578063b60d42881461021b578063be2693f014610225576100a4565b80630343fb25146100ae5780630ec3b027146100eb5780631bf6132d146101165780633a7b6c74146101535780633ccfd60b14610190576100a4565b366100a4576100a261022f565b005b6100ac61022f565b005b3480156100ba57600080fd5b506100d560048036038101906100d09190610b90565b610360565b6040516100e29190610bd6565b60405180910390f35b3480156100f757600080fd5b506101006103a8565b60405161010d9190610c50565b60405180910390f35b34801561012257600080fd5b5061013d60048036038101906101389190610b90565b6103ce565b60405161014a9190610bd6565b60405180910390f35b34801561015f57600080fd5b5061017a60048036038101906101759190610c97565b6103e6565b6040516101879190610cd3565b60405180910390f35b61019861043f565b005b3480156101a657600080fd5b506101af610681565b6040516101bc9190610bd6565b60405180910390f35b3480156101d157600080fd5b506101da61068e565b6040516101e79190610cd3565b60405180910390f35b3480156101fc57600080fd5b506102056106b8565b6040516102129190610c50565b60405180910390f35b61022361022f565b005b61022d6106e2565b005b6802b5e3af16b188000061026e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109aa90919063ffffffff16565b10156102a6576040517f964742c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f49190610d1d565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600060018054905082106103f957600080fd5b6001828154811061040d5761040c610d73565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610571576000600182815481106104ec576104eb610d73565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061056990610da2565b9150506104c9565b50600067ffffffffffffffff81111561058d5761058c610deb565b5b6040519080825280602002602001820160405280156105bb5781602001602082028036833780820191505090505b50600190805190602001906105d1929190610a86565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105f890610e4b565b60006040518083038185875af1925050503d8060008114610635576040519150601f19603f3d011682016040523d82523d6000602084013e61063a565b606091505b505090508061067e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067590610ebd565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610769576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107ed57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107a3575b5050505050905060005b815181101561087757600082828151811061081557610814610d73565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061086f90610da2565b9150506107f7565b50600067ffffffffffffffff81111561089357610892610deb565b5b6040519080825280602002602001820160405280156108c15781602001602082028036833780820191505090505b50600190805190602001906108d7929190610a86565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161092090610e4b565b60006040518083038185875af1925050503d806000811461095d576040519150601f19603f3d011682016040523d82523d6000602084013e610962565b606091505b50509050806109a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099d90610ebd565b60405180910390fd5b5050565b6000806109b6836109e6565b90506000670de0b6b3a764000085836109cf9190610edd565b6109d99190610f66565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a2f57600080fd5b505afa158015610a43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a679190611024565b5050509150506402540be40081610a7e919061109f565b915050919050565b828054828255906000526020600020908101928215610aff579160200282015b82811115610afe5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610aa6565b5b509050610b0c9190610b10565b5090565b5b80821115610b29576000816000905550600101610b11565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5d82610b32565b9050919050565b610b6d81610b52565b8114610b7857600080fd5b50565b600081359050610b8a81610b64565b92915050565b600060208284031215610ba657610ba5610b2d565b5b6000610bb484828501610b7b565b91505092915050565b6000819050919050565b610bd081610bbd565b82525050565b6000602082019050610beb6000830184610bc7565b92915050565b6000819050919050565b6000610c16610c11610c0c84610b32565b610bf1565b610b32565b9050919050565b6000610c2882610bfb565b9050919050565b6000610c3a82610c1d565b9050919050565b610c4a81610c2f565b82525050565b6000602082019050610c656000830184610c41565b92915050565b610c7481610bbd565b8114610c7f57600080fd5b50565b600081359050610c9181610c6b565b92915050565b600060208284031215610cad57610cac610b2d565b5b6000610cbb84828501610c82565b91505092915050565b610ccd81610b52565b82525050565b6000602082019050610ce86000830184610cc4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d2882610bbd565b9150610d3383610bbd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d6857610d67610cee565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610dad82610bbd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610de057610ddf610cee565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e35600083610e1a565b9150610e4082610e25565b600082019050919050565b6000610e5682610e28565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ea7600b83610e60565b9150610eb282610e71565b602082019050919050565b60006020820190508181036000830152610ed681610e9a565b9050919050565b6000610ee882610bbd565b9150610ef383610bbd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f2c57610f2b610cee565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f7182610bbd565b9150610f7c83610bbd565b925082610f8c57610f8b610f37565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fb681610f97565b8114610fc157600080fd5b50565b600081519050610fd381610fad565b92915050565b6000819050919050565b610fec81610fd9565b8114610ff757600080fd5b50565b60008151905061100981610fe3565b92915050565b60008151905061101e81610c6b565b92915050565b600080600080600060a086880312156110405761103f610b2d565b5b600061104e88828901610fc4565b955050602061105f88828901610ffa565b94505060406110708882890161100f565b93505060606110818882890161100f565b925050608061109288828901610fc4565b9150509295509295909350565b60006110aa82610fd9565b91506110b583610fd9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110f4576110f3610cee565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561113157611130610cee565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561116e5761116d610cee565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111ab576111aa610cee565b5b82820290509291505056fea2646970667358221220f46ae91455b83957d1b4021c833957ec6ecb6edfa233b6ea0b8eabf1fbb0d8a264736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 75,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}